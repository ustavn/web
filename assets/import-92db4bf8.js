import{r as a,D as u}from"./index-038953f0.js";function k(t,e,n){const r=a.useRef(t!==void 0),[s,o]=a.useState(e),c=t!==void 0,l=r.current;return r.current=c,!c&&l&&s!==e&&o(e),[c?t:s,a.useCallback((...p)=>{const[$,...v]=p;let x=n==null?void 0:n($,...v);return o($),x},[n])]}const i={prefix:String(Math.round(Math.random()*1e10)),current:0},f=u.createContext(i),b=u.createContext(!1);let S=!!(typeof window<"u"&&window.document&&window.document.createElement),d=new WeakMap;function m(t=!1){let e=a.useContext(f),n=a.useRef(null);if(n.current===null&&!t){var r,s;let o=(s=u.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED)===null||s===void 0||(r=s.ReactCurrentOwner)===null||r===void 0?void 0:r.current;if(o){let c=d.get(o);c==null?d.set(o,{id:e.current,state:o.memoizedState}):o.memoizedState!==c.state&&(e.current=c.id,d.delete(o))}n.current=++e.current}return n.current}function w(t){let e=a.useContext(f);e===i&&!S&&console.warn("When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.");let n=m(!!t),r=`react-aria${e.prefix}`;return t||`${r}-${n}`}function g(t){let e=u.useId(),[n]=a.useState(M()),r=n?"react-aria":`react-aria${i.prefix}`;return t||`${r}-${e}`}const z=typeof u.useId=="function"?g:w;function y(){return!1}function C(){return!0}function h(t){return()=>{}}function M(){return typeof u.useSyncExternalStore=="function"?u.useSyncExternalStore(h,y,C):a.useContext(b)}export{z as $,k as u};
